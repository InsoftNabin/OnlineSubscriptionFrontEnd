@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Insoft.cshtml";
}
<style>
    .rounded{
        border-radius:8px;
    }
</style>

<div class="page-content">
    <div class="content-body">
        <div class="clearfix well">



            <div class="accordion" id="productAccordion">
                <div class="card">
                    <div class="card-header" id="headingOne">
                        <h5 class="mb-0 d-flex justify-content-between">
                            <button class="btn btn-primary" id="addProduct" type="button" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne" style="text-decoration: none;">
                                <h5><i class="fas fa-plus" id="toggleIcon"></i> &nbsp; Add New Product</h5>
                            </button>
                            <button class="btn btn-primary toggleCollapse" type="button"  aria-expanded="false" aria-controls="collapseOne" style="text-decoration: none;">
                                <i class="fas fa fa-caret-up" id="toggleArrow"></i>
                            </button>
                        </h5>
                    </div>

                    <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#productAccordion">
                        <div class="card-body">
                            <form>
                                <div class="form-group" hidden>
                                    <label for="productId">Product ID (Optional):</label>
                                    <input type="number" class="form-control border border-dark rounded id" id="productId" />
                                </div>
                                <div class="form-group">
                                    <label for="productName">Product Name:</label>
                                    <input type="text" class="form-control border border-dark rounded name" id="productName" placeholder="Enter Product Name" required />
                                </div>
                                <div class="form-group">
                                    <label for="productDescription">Description:</label>
                                    <input type="text" class="form-control border border-dark rounded description" id="productDescription" placeholder="Enter Description" required />
                                </div>
                                <div class="form-group">
                                    <label for="productVersion">Version:</label>
                                    <input type="text" class="form-control border border-dark rounded version" id="productVersion" placeholder="Enter Version" required />
                                </div>
                                <br />
                                <button type="button" class="btn btn-success BtnInsert" id="BtnInsert">Insert &nbsp; <i class="fas fa-plus" id="toggleIcon"></i>  </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <div class="clearfix well">
                <div class="products row">
                    <!-- Product cards will be injected here -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #5cb85c; color: white;">
                <h3 class="modal-title" id="exampleModalLabel">Edit Product</h3>
                <button type="button" class="btn  btn-danger" data-dismiss="modal" aria-label="Close" style="margin-left: auto;"><i class="fa fas  fa-xmark">X</i></button>
            </div>
            <div class="modal-body">
                <input type="hidden" class="id" />
                <div class="form-group">
                    <label for="productName">Product Name:</label>
                    <input type="text" class="form-control name" id="productName" placeholder="Product Name" required />
                </div>
                <div class="form-group">
                    <label for="productDescription">Product Description:</label>
                    <input type="text" class="form-control description" id="productDescription" placeholder="Description" required />
                </div>
                <div class="form-group">
                    <label for="productVersion">Product Version:</label>
                    <input type="text" class="form-control version" id="productVersion" placeholder="Version" required />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" style="margin:10px;">Close</button>
                <button type="button" class="btn btn-success BtnInsertM">Update &nbsp;<i class="ace-icon fa fa-floppy-o bigger-110"></i></button>
            </div>
        </div>
    </div>
</div>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

@* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
 *@

<script type="text/javascript">
    $(document).ready(function () {
        

        $('#productAccordion').on('show.bs.collapse', function () {
            $("#toggleIcon").removeClass("fa-plus").addClass("fa-minus");
        });

        $('#productAccordion').on('hide.bs.collapse', function () {
            $("#toggleIcon").removeClass("fa-minus").addClass("fa-plus");
        });
        getTableData();
    });
    function resetForm() {
        $("#productId").val("");
        $("#productName").val("");
        $("#productDescription").val("");
        $("#productVersion").val("");
        $(".toggleCollapse").trigger('click');
        getTableData();
    }
    $("#addProduct").on("click", function () {
        $("#collapseOne").removeClass("collapse", true);
    });
    $(".toggleCollapse").on("click", function () {
        $("#collapseOne").addClass("collapse", true);
    });
    $(".btn-edit").on("click", function () {
        $("#editProductModal").addClass("fade", true);
    });

    function getTableData() {
        var a = AjaxCallWithoutDataNoAsync("/Products/getProducts");
        var ab = JSON.parse(a);
        var jsondata = JSON.parse(ab);

        var cardDOM = "";
        if (jsondata.length > 0) {
            for (var i = 0; i < jsondata.length; i++) {
                cardDOM += `
                        <div class="card product-card  col-sm-5" >
                                <div class="card-header card-insoft"  style="background-color: #0b3b56;color: white;">
                                    <h2 style="text-transform: uppercase;"><b>`+ jsondata[i]["Name"] + `</b></h2>
                            </div>
                            <div class="card-body">
                                    <h3>`+ jsondata[i]["Description"] + `</h3>
                                    <h4>Version: `+ jsondata[i]["Version"] + `</h4>
                            </div>
                            <div class="card-footer" style="display: flex; justify-content: space-between;">
                                      <button class="btn btn-primary  btn-edit" onclick="editProduct(`+ jsondata[i]["Id"] + `)" data-toggle="modal" data-target="#editProductModal">
                                          Edit &nbsp; <i class="ace-icon fa fa-edit bigger-130 yellow"></i>
                                       </button>
                                    <button class="btn btn-danger " onclick="deleteProduct(`+ jsondata[i]["Id"] + `)">
                                    Delete &nbsp; <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>`;
            }
            $(".products").empty().append(cardDOM);
        } else {
            $(".products").empty().append('<p>No products found.</p>');
        }
    }

    $(".BtnInsert").on("click", async function () {

        if ($(".name").val() == "" || $(".description").val() == "" || $(".version").val()=="") {
            toastr.error("Please fill in all the fields!!!.");
        }
        else {

            var parm = {
                Id: $(".id").val() ? parseInt($(".id").val()) : 0,
                Name: $(".name").val(),
                Description: $(".description").val(),
                Version: $(".version").val()
            };

            var data = await AjaxCall("/Products/InsertUpdate", parm);
            var jsondataresponse = JSON.parse(data);

            if (jsondataresponse == 1) {
                toastr.success("Product inserted successfully!");
                resetForm();
            } else {
                toastr.error("Failed to insert product.");
            }
        }
    });

    async function editProduct(id) {
        var parm = {
            Id: id
        };

        var productData = await AjaxCall("/Products/getProduct", parm);
        var productDataa = JSON.parse(productData);

        var product = JSON.parse(productDataa);
      
        if (product.length > 0) {
            $("#editProductModal .id").val(product[0]["Id"]);
            $("#editProductModal ").find("#productName").val(product[0]["Name"]);
            $("#editProductModal .description").val(product[0]["Description"]);
            $("#editProductModal .version").val(product[0]["Version"]);
        } else {
            alert("No product found for the selected item.");
        }
    }

    $("#editProductModal .BtnInsertM").on("click", async function () {
        var parm = {
            Id: parseInt($("#editProductModal .id").val()),
            Name: $("#editProductModal .name").val(),
            Description: $("#editProductModal .description").val(),
            Version: $("#editProductModal .version").val()
        };

        var productData = await AjaxCall("/Products/InsertUpdate", parm);
        var jsondataresponse = JSON.parse(productData);

        if (jsondataresponse == 1) {
            toastr.success("Product edited successfully!");
            getTableData();
            location.reload(); // Reload the page
        }
    });


    async function deleteProduct(id) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
            var parm = { Id: id };

            var productData = await AjaxCall("/Products/DeleteProduct", parm);
            var productDataa = JSON.parse(productData);
            var product = JSON.parse(productDataa);

            getTableData();
            Swal.fire(
                'Deleted!',
                'Your product has been deleted.',
                'success'
            );
        }
    }

</script>
